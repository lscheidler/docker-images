#encoding=UTF-8
# Configuration files must begin with a line specifying the encoding
#  of the the file.

#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Professional and Standard Editions of the Wrapper require a valid
#  License Key to start.  Licenses can be purchased or a trial license
#  requested on the following pages:
# http://wrapper.tanukisoftware.com/purchase
# http://wrapper.tanukisoftware.com/trial

# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug

# The Wrapper will look for either of the following optional files for a
#  valid License Key.  License Key properties can optionally be included
#  directly in this configuration file.
#include ../conf/wrapper-license.conf
#include ../conf/wrapper-license-%WRAPPER_HOST_NAME%.conf

# The following property will output information about which License Key(s)
#  are being found, and can aid in resolving any licensing problems.
#wrapper.license.debug=TRUE

#********************************************************************
# Wrapper Localization
#********************************************************************
# Specify the locale which the Wrapper should use.  By default the system
#  locale is used.
#wrapper.lang=en_US # en_US or ja_JP

# Specify the location of the Wrapper's language resources.  If these are
#  missing, the Wrapper will default to the en_US locale.
#wrapper.lang.folder=../lang

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
wrapper.java.command=java
#  Specify a specific java binary:
#set.JAVA_HOME=/java/path
#wrapper.java.command=%JAVA_HOME%/bin/java

# Tell the Wrapper to log the full generated Java command line.
wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=/usr/share/java/wrapper.jar
wrapper.java.classpath.2=/usr/share/%TOMCAT%/bin/bootstrap.jar
wrapper.java.classpath.3=/usr/share/%TOMCAT%/bin/tomcat-juli.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=/usr/lib/jni
wrapper.java.library.path.2=/usr/lib/x86_64-linux-gnu

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

wrapper.working.dir=/data/app

# Java Additional Parameters
wrapper.java.additional.1=-Djvm.process.name=%APP_NAME%
wrapper.java.additional.2=-server
wrapper.java.additional.3=-verbose:gc
wrapper.java.additional.10=-XX:+PrintGCDetails
wrapper.java.additional.11=-XX:+PrintGCDateStamps
wrapper.java.additional.12=-XX:-TraceClassUnloading
wrapper.java.additional.13=-XX:+UseG1GC

#
wrapper.java.additional.20=-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
wrapper.java.additional.21=-Djava.util.logging.config.file=/data/app/wrapper/app/conf/logging.properties
wrapper.java.additional.22=-Djava.endorsed.dirs=/data/app/wrapper/app/endorsed
wrapper.java.additional.23=-Dcatalina.base=/data/app/wrapper/app
wrapper.java.additional.24=-Dcatalina.home=/usr/share/%TOMCAT%
wrapper.java.additional.25=-Djava.io.tmpdir=/data/app/wrapper/app/temp

#
# JMX configuration
wrapper.java.additional.30=%JMX_LINE_1%
wrapper.java.additional.31=%JMX_LINE_2%
wrapper.java.additional.32=%JMX_LINE_3%
wrapper.java.additional.33=%JMX_LINE_4%

#
wrapper.java.additional.41=-Djava.rmi.server.hostname=localhost
wrapper.java.additional.42=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true
wrapper.java.additional.43=-Xloggc:/data/app/data/app/logs/gc.%p.log
wrapper.java.additional.44=-XX:+UseGCLogFileRotation
wrapper.java.additional.45=-XX:NumberOfGCLogFiles=100
wrapper.java.additional.46=-XX:GCLogFileSize=100M

#
wrapper.java.additional.50=%JAVA_ADDITIONAL_1%
wrapper.java.additional.51=%JAVA_ADDITIONAL_2%
wrapper.java.additional.52=%JAVA_ADDITIONAL_3%
wrapper.java.additional.53=%JAVA_ADDITIONAL_4%
wrapper.java.additional.54=%JAVA_ADDITIONAL_5%
wrapper.java.additional.55=%JAVA_ADDITIONAL_6%
wrapper.java.additional.56=%JAVA_ADDITIONAL_7%
wrapper.java.additional.57=%JAVA_ADDITIONAL_8%
wrapper.java.additional.58=%JAVA_ADDITIONAL_9%

#
wrapper.java.additional.60=%JMXTRANS_AGENT%
wrapper.java.additional.61=%JMXTRANS_LINE_1%
wrapper.java.additional.62=%JMXTRANS_LINE_2%
wrapper.java.additional.63=%JMXTRANS_LINE_3%
wrapper.java.additional.64=%NEWRELIC_AGENT%
wrapper.java.additional.65=%NEWRELIC_LINE_1%
wrapper.java.additional.66=%NEWRELIC_LINE_2%
wrapper.java.additional.67=%NEWRELIC_LINE_3%
wrapper.java.additional.68=%NEWRELIC_LINE_4%

#
wrapper.java.additional.70=%DEBUG_LINE_1%
wrapper.java.additional.71=%DEBUG_LINE_2%

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=%JAVA_INITMEMORY%

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=%JAVA_MAXMEMORY%

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.2=1
wrapper.app.parameter.3=start
wrapper.app.parameter.4=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.5=true
wrapper.app.parameter.6=1
wrapper.app.parameter.7=stop


#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
# http://wrapper.tanukisoftware.com/doc/english/prop-console-format.html
wrapper.console.format=LPZM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# set rollmode to date
wrapper.logfile.rollmode=DATE

# Log file to use for wrapper output logging.
wrapper.logfile=/data/app/data/app/logs/wrapper.YYYYMMDD.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPZM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=1024m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=100

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.
wrapper.pidfile.strict=TRUE

# Title to use when running as a console
wrapper.console.title=@app.long.name@

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=10
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
# (Ignore output from dumping the configuration to the console.  This is only needed by the TestWrapper sample application.)
wrapper.filter.trigger.999=wrapper.filter.trigger.*java.lang.OutOfMemoryError
wrapper.filter.allow_wildcards.999=TRUE
wrapper.filter.action.999=NONE
#  Ignore -verbose:class output to avoid false positives.
wrapper.filter.trigger.1000=[Loaded java.lang.OutOfMemoryError
wrapper.filter.action.1000=NONE
# (Simple match)
wrapper.filter.trigger.1001=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1001=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1001=TRUE
wrapper.filter.action.1001=RESTART
wrapper.filter.message.1001=The JVM has run out of memory.

#********************************************************************
# Wrapper Email Notifications. (Requires Professional Edition)
#********************************************************************
# Common Event Email settings.
#wrapper.event.default.email.debug=TRUE
#wrapper.event.default.email.smtp.host=<SMTP_Host>
#wrapper.event.default.email.smtp.port=25
#wrapper.event.default.email.subject=[%WRAPPER_HOSTNAME%:%WRAPPER_NAME%:%WRAPPER_EVENT_NAME%] Event Notification
#wrapper.event.default.email.sender=<Sender email>
#wrapper.event.default.email.recipient=<Recipient email>

# Configure the log attached to event emails.
#wrapper.event.default.email.attach_log=TRUE
#wrapper.event.default.email.maillog.lines=50
#wrapper.event.default.email.maillog.format=LPTM
#wrapper.event.default.email.maillog.loglevel=INFO

# Enable specific event emails.
#wrapper.event.wrapper_start.email=TRUE
#wrapper.event.jvm_prelaunch.email=TRUE
#wrapper.event.jvm_start.email=TRUE
#wrapper.event.jvm_started.email=TRUE
#wrapper.event.jvm_deadlock.email=TRUE
#wrapper.event.jvm_stop.email=TRUE
#wrapper.event.jvm_stopped.email=TRUE
#wrapper.event.jvm_restart.email=TRUE
#wrapper.event.jvm_failed_invocation.email=TRUE
#wrapper.event.jvm_max_failed_invocations.email=TRUE
#wrapper.event.jvm_kill.email=TRUE
#wrapper.event.jvm_killed.email=TRUE
#wrapper.event.jvm_unexpected_exit.email=TRUE
#wrapper.event.wrapper_stop.email=TRUE

# Specify custom mail content
wrapper.event.jvm_restart.email.body=The JVM was restarted.\n\nPlease check on its status.\n

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=@app.name@

# Display name of the service
wrapper.displayname=@app.long.name@

# Description of the service
wrapper.description=@app.description@

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

